
-- Tabela de Alunos
CREATE TABLE Alunos (
    id INT AUTO_INCREMENT PRIMARY KEY,
    email VARCHAR(100) NOT NULL UNIQUE,
    senha VARCHAR(255) NOT NULL,
    nome VARCHAR(255) NOT NULL,
    cidade VARCHAR(100),
    estado VARCHAR(100),
    data_nascimento DATE,
    biografia TEXT,
    foto_perfil VARCHAR(255),
    idiomas TEXT,
    data_cadastro TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Tabela de Tutores
CREATE TABLE Tutores (
    id INT AUTO_INCREMENT PRIMARY KEY,
    email VARCHAR(100) NOT NULL UNIQUE,
    senha VARCHAR(255) NOT NULL,
    nome VARCHAR(255) NOT NULL,
    cidade VARCHAR(100),
    estado VARCHAR(100),
    data_nascimento DATE,
    biografia TEXT,
    foto_perfil VARCHAR(255),
    idiomas TEXT,
    data_cadastro TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

ALTER TABLE Alunos
ADD COLUMN tipo VARCHAR(10) NOT NULL DEFAULT 'aluno';

ALTER TABLE Tutores
ADD COLUMN tipo VARCHAR(10) NOT NULL DEFAULT 'tutor';


-- Tabela de Mensagens
CREATE TABLE Mensagens (
    id INT AUTO_INCREMENT PRIMARY KEY,
    id_remetente INT NOT NULL,
    id_destinatario INT NOT NULL,
    mensagem TEXT NOT NULL,
    data_envio TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (id_remetente) REFERENCES Alunos(id) ON DELETE CASCADE,
    FOREIGN KEY (id_destinatario) REFERENCES Tutores(id) ON DELETE CASCADE
);

ALTER TABLE Mensagens
ADD COLUMN id_conversa INT(11) NOT NULL,
ADD CONSTRAINT fk_conversa
FOREIGN KEY (id_conversa) REFERENCES Conversas(id_conversa) ON DELETE CASCADE;



CREATE TABLE Conversas (
    id_conversa INT AUTO_INCREMENT PRIMARY KEY,
    id_usuario1 INT NOT NULL,
    id_usuario2 INT NOT NULL,
    data_inicio TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (id_usuario1) REFERENCES Alunos(id) ON DELETE CASCADE,
    FOREIGN KEY (id_usuario2) REFERENCES Tutores(id) ON DELETE CASCADE
);



-- Tabela de Curtidas (Relaciona Alunos e Tutores)
CREATE TABLE Curtidas (
    id INT AUTO_INCREMENT PRIMARY KEY,
    id_aluno INT NOT NULL,
    id_tutor INT NOT NULL,
    data_curtida TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (id_aluno) REFERENCES Alunos(id) ON DELETE CASCADE,
    FOREIGN KEY (id_tutor) REFERENCES Tutores(id) ON DELETE CASCADE
);

-- Tabela de Logs (Relacionado a ações de Alunos e Tutores)
CREATE TABLE Logs (
    id INT AUTO_INCREMENT PRIMARY KEY,
    id_usuario INT NOT NULL,
    tipo_usuario ENUM('aluno', 'tutor') NOT NULL,
    acao VARCHAR(255) NOT NULL,
    data_acao TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (id_usuario) REFERENCES Alunos(id) ON DELETE CASCADE
        ON UPDATE CASCADE
);


-- Tabela de contratos
CREATE TABLE Contratos (
    id INT AUTO_INCREMENT PRIMARY KEY,
    id_aluno INT,
    id_tutor INT,
    status ENUM('pendente', 'confirmado', 'recusado') DEFAULT 'pendente',
    data_contrato TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (id_aluno) REFERENCES Alunos(id),
    FOREIGN KEY (id_tutor) REFERENCES Tutores(id)
);



------------------------------------------------------------------



