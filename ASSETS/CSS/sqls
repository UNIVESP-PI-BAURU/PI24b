CREATE TABLE TiposUsuario (
    id INT AUTO_INCREMENT PRIMARY KEY,
    descricao VARCHAR(50) NOT NULL UNIQUE
);



Exemplo de Dados na Tabela TiposUsuario:
1, "Tutor"
2, "Aluno"




CREATE TABLE Idiomas (
    id INT AUTO_INCREMENT PRIMARY KEY,
    idioma VARCHAR(50) NOT NULL UNIQUE
);




CREATE TABLE Usuarios (
    id INT AUTO_INCREMENT PRIMARY KEY,
    email VARCHAR(100) UNIQUE NOT NULL,
    senha VARCHAR(255) NOT NULL,
    data_cadastro TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);



CREATE TABLE Alunos (
    id INT AUTO_INCREMENT PRIMARY KEY,
    id_usuario INT,
    nome VARCHAR(100) NOT NULL,
    cidade VARCHAR(100),
    estado VARCHAR(100),
    data_nascimento DATE,
    biografia TEXT,
    foto_perfil VARCHAR(255),
    data_cadastro TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    tipo_usuario INT DEFAULT 2, -- 2 para Aluno
    FOREIGN KEY (id_usuario) REFERENCES Usuarios(id),
    FOREIGN KEY (tipo_usuario) REFERENCES TiposUsuario(id)
);



CREATE TABLE Tutores (
    id INT AUTO_INCREMENT PRIMARY KEY,
    id_usuario INT,
    nome VARCHAR(100) NOT NULL,
    cidade VARCHAR(100),
    estado VARCHAR(100),
    data_nascimento DATE,
    biografia TEXT,
    foto_perfil VARCHAR(255),
    data_cadastro TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    tipo_usuario INT DEFAULT 1, -- 1 para Tutor
    FOREIGN KEY (id_usuario) REFERENCES Usuarios(id),
    FOREIGN KEY (tipo_usuario) REFERENCES TiposUsuario(id)
);



CREATE TABLE IdiomaAluno (
    id INT AUTO_INCREMENT PRIMARY KEY,
    id_aluno INT,
    id_idioma INT,
    FOREIGN KEY (id_aluno) REFERENCES Alunos(id),
    FOREIGN KEY (id_idioma) REFERENCES Idiomas(id)
);




CREATE TABLE IdiomaTutor (
    id INT AUTO_INCREMENT PRIMARY KEY,
    id_tutor INT,
    id_idioma INT,
    FOREIGN KEY (id_tutor) REFERENCES Tutores(id),
    FOREIGN KEY (id_idioma) REFERENCES Idiomas(id)
);



----------------------------


-- Tabela Alunos
CREATE TABLE Alunos (
    id INT AUTO_INCREMENT PRIMARY KEY,
    email VARCHAR(100) UNIQUE NOT NULL,
    senha VARCHAR(255) NOT NULL,
    nome VARCHAR(100) NOT NULL,
    cidade VARCHAR(100),
    estado VARCHAR(100),
    data_nascimento DATE,
    biografia TEXT,
    foto_perfil VARCHAR(255),
    idiomas VARCHAR(255),  -- Armazena os idiomas em formato de string (ex: "Inglês, Espanhol")
    data_cadastro TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    tipo ENUM('aluno') DEFAULT 'aluno'  -- Tipo fixo para Alunos
);

-- Tabela Tutores
CREATE TABLE Tutores (
    id INT AUTO_INCREMENT PRIMARY KEY,
    email VARCHAR(100) UNIQUE NOT NULL,
    senha VARCHAR(255) NOT NULL,
    nome VARCHAR(100) NOT NULL,
    cidade VARCHAR(100),
    estado VARCHAR(100),
    data_nascimento DATE,
    biografia TEXT,
    foto_perfil VARCHAR(255),
    idiomas VARCHAR(255),  -- Armazena os idiomas em formato de string (ex: "Inglês, Francês")
    data_cadastro TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    tipo ENUM('tutor') DEFAULT 'tutor'  -- Tipo fixo para Tutores
);



--------------------------


-- Tabela de Alunos
CREATE TABLE Alunos (
    id INT AUTO_INCREMENT PRIMARY KEY,
    email VARCHAR(100) NOT NULL UNIQUE,
    senha VARCHAR(255) NOT NULL,
    nome VARCHAR(255) NOT NULL,
    cidade VARCHAR(100),
    estado VARCHAR(100),
    data_nascimento DATE,
    biografia TEXT,
    foto_perfil VARCHAR(255),
    idiomas TEXT,
    data_cadastro TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Tabela de Tutores
CREATE TABLE Tutores (
    id INT AUTO_INCREMENT PRIMARY KEY,
    email VARCHAR(100) NOT NULL UNIQUE,
    senha VARCHAR(255) NOT NULL,
    nome VARCHAR(255) NOT NULL,
    cidade VARCHAR(100),
    estado VARCHAR(100),
    data_nascimento DATE,
    biografia TEXT,
    foto_perfil VARCHAR(255),
    idiomas TEXT,
    data_cadastro TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

ALTER TABLE Alunos
ADD COLUMN tipo VARCHAR(10) NOT NULL DEFAULT 'aluno';

ALTER TABLE Tutores
ADD COLUMN tipo VARCHAR(10) NOT NULL DEFAULT 'tutor';


-- Tabela de Mensagens
CREATE TABLE Mensagens (
    id INT AUTO_INCREMENT PRIMARY KEY,
    id_remetente INT NOT NULL,
    id_destinatario INT NOT NULL,
    mensagem TEXT NOT NULL,
    data_envio TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (id_remetente) REFERENCES Alunos(id) ON DELETE CASCADE,
    FOREIGN KEY (id_destinatario) REFERENCES Tutores(id) ON DELETE CASCADE
);

-- Tabela de Agendamentos (Utilizando id_aluno e id_tutor)
CREATE TABLE Agendamentos (
    id INT AUTO_INCREMENT PRIMARY KEY,
    id_aluno INT NOT NULL,
    id_tutor INT NOT NULL,
    data_aula DATETIME NOT NULL,
    status ENUM('Pendente', 'Confirmada', 'Cancelada') NOT NULL DEFAULT 'Pendente',
    FOREIGN KEY (id_aluno) REFERENCES Alunos(id),
    FOREIGN KEY (id_tutor) REFERENCES Tutores(id)
);

-- Tabela de Curtidas (Relaciona Alunos e Tutores)
CREATE TABLE Curtidas (
    id INT AUTO_INCREMENT PRIMARY KEY,
    id_aluno INT NOT NULL,
    id_tutor INT NOT NULL,
    data_curtida TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (id_aluno) REFERENCES Alunos(id) ON DELETE CASCADE,
    FOREIGN KEY (id_tutor) REFERENCES Tutores(id) ON DELETE CASCADE
);

-- Tabela de Logs (Relacionado a ações de Alunos e Tutores)
CREATE TABLE Logs (
    id INT AUTO_INCREMENT PRIMARY KEY,
    id_usuario INT NOT NULL,
    tipo_usuario ENUM('aluno', 'tutor') NOT NULL,
    acao VARCHAR(255) NOT NULL,
    data_acao TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (id_usuario) REFERENCES Alunos(id) ON DELETE CASCADE
        ON UPDATE CASCADE
);

-- Tabela de Disponibilidade de Tutores
CREATE TABLE Disponibilidade_Tutores (
    id INT AUTO_INCREMENT PRIMARY KEY,
    id_tutor INT NOT NULL,
    dia_semana ENUM('Segunda', 'Terça', 'Quarta', 'Quinta', 'Sexta', 'Sábado', 'Domingo') NOT NULL,
    hora_inicio TIME NOT NULL,
    hora_fim TIME NOT NULL,
    FOREIGN KEY (id_tutor) REFERENCES Tutores(id)
);



------------------------------------------------------------------



